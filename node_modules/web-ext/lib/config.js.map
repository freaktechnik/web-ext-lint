{"version":3,"file":"config.js","names":["os","path","fs","camelCase","decamelize","parseJSON","fileExists","createLogger","UsageError","WebExtError","log","import","meta","url","applyConfigToArgv","argv","argvFromCLI","configObject","options","configFileName","newArgv","option","Object","keys","Array","isArray","decamelizedOptName","separator","type","undefined","expectedType","optionType","defaultValue","default","wasValueSetOnCLI","debug","coerce","loadJSConfigFile","filePath","resolvedFilePath","resolve","endsWith","nonce","Date","now","Math","random","configModule","readFile","encoding","configDefault","esmConfigMod","error","configFileError","cause","webExt","length","discoverConfigFiles","getHomeDir","homedir","magicConfigName","possibleConfigs","join","process","cwd","configs","Promise","all","map","fileName","resolvedFileName","existingConfigs","forEach","f","push"],"sources":["../src/config.js"],"sourcesContent":["import os from 'os';\nimport path from 'path';\nimport fs from 'fs/promises';\n\nimport camelCase from 'camelcase';\nimport decamelize from 'decamelize';\nimport parseJSON from 'parse-json';\n\nimport fileExists from './util/file-exists.js';\nimport { createLogger } from './util/logger.js';\nimport { UsageError, WebExtError } from './errors.js';\n\nconst log = createLogger(import.meta.url);\n\nexport function applyConfigToArgv({\n  argv,\n  argvFromCLI,\n  configObject,\n  options,\n  configFileName,\n}) {\n  let newArgv = { ...argv };\n\n  for (const option of Object.keys(configObject)) {\n    if (camelCase(option) !== option) {\n      throw new UsageError(\n        `The config option \"${option}\" must be ` +\n          `specified in camel case: \"${camelCase(option)}\"`,\n      );\n    }\n\n    // A config option cannot be a sub-command config\n    // object if it is an array.\n    if (\n      !Array.isArray(configObject[option]) &&\n      typeof options[option] === 'object' &&\n      typeof configObject[option] === 'object'\n    ) {\n      // Descend into the nested configuration for a sub-command.\n      newArgv = applyConfigToArgv({\n        argv: newArgv,\n        argvFromCLI,\n        configObject: configObject[option],\n        options: options[option],\n        configFileName,\n      });\n      continue;\n    }\n\n    const decamelizedOptName = decamelize(option, { separator: '-' });\n\n    if (typeof options[decamelizedOptName] !== 'object') {\n      throw new UsageError(\n        `The config file at ${configFileName} specified ` +\n          `an unknown option: \"${option}\"`,\n      );\n    }\n    if (options[decamelizedOptName].type === undefined) {\n      // This means yargs option type wasn't not defined correctly\n      throw new WebExtError(`Option: ${option} was defined without a type.`);\n    }\n\n    const expectedType =\n      options[decamelizedOptName].type === 'count'\n        ? 'number'\n        : options[decamelizedOptName].type;\n\n    const optionType = Array.isArray(configObject[option])\n      ? 'array'\n      : typeof configObject[option];\n\n    if (optionType !== expectedType) {\n      throw new UsageError(\n        `The config file at ${configFileName} specified ` +\n          `the type of \"${option}\" incorrectly as \"${optionType}\"` +\n          ` (expected type \"${expectedType}\")`,\n      );\n    }\n\n    let defaultValue;\n    if (options[decamelizedOptName]) {\n      if (options[decamelizedOptName].default !== undefined) {\n        defaultValue = options[decamelizedOptName].default;\n      } else if (expectedType === 'boolean') {\n        defaultValue = false;\n      }\n    }\n\n    // This is our best effort (without patching yargs) to detect\n    // if a value was set on the CLI instead of in the config.\n    // It looks for a default value and if the argv value is\n    // different, it assumes that the value was configured on the CLI.\n\n    const wasValueSetOnCLI =\n      typeof argvFromCLI[option] !== 'undefined' &&\n      argvFromCLI[option] !== defaultValue;\n    if (wasValueSetOnCLI) {\n      log.debug(\n        `Favoring CLI: ${option}=${argvFromCLI[option]} over ` +\n          `configuration: ${option}=${configObject[option]}`,\n      );\n      newArgv[option] = argvFromCLI[option];\n      continue;\n    }\n\n    newArgv[option] = configObject[option];\n\n    const coerce = options[decamelizedOptName].coerce;\n    if (coerce) {\n      log.debug(`Calling coerce() on configured value for ${option}`);\n      newArgv[option] = coerce(newArgv[option]);\n    }\n\n    newArgv[decamelizedOptName] = newArgv[option];\n  }\n  return newArgv;\n}\n\nexport async function loadJSConfigFile(filePath) {\n  const resolvedFilePath = path.resolve(filePath);\n  log.debug(\n    `Loading JS config file: \"${filePath}\" ` +\n      `(resolved to \"${resolvedFilePath}\")`,\n  );\n\n  if (filePath.endsWith('.js')) {\n    throw new UsageError(\n      ` Invalid config file \"${resolvedFilePath}\": the file extension should be` +\n        '\".cjs\" or \".mjs\". More information at: https://mzl.la/web-ext-config-file',\n    );\n  }\n\n  let configObject;\n  try {\n    const nonce = `${Date.now()}-${Math.random()}`;\n\n    let configModule;\n    if (resolvedFilePath.endsWith('package.json')) {\n      configModule = parseJSON(\n        await fs.readFile(resolvedFilePath, { encoding: 'utf-8' }),\n      );\n    } else {\n      configModule = await import(`file://${resolvedFilePath}?nonce=${nonce}`);\n    }\n\n    if (configModule.default) {\n      const { default: configDefault, ...esmConfigMod } = configModule;\n      // ES modules may expose both a default and named exports and so\n      // we merge the named exports on top of what may have been set in\n      // the default export.\n      if (filePath.endsWith('.cjs')) {\n        // Remove the additional 'module.exports' named export that Node.js >=\n        // 24 is returning from the dynamic import call (in addition to being\n        // also set on the default property as in Node.js < 24).\n        delete esmConfigMod['module.exports'];\n      }\n      configObject = { ...configDefault, ...esmConfigMod };\n    } else {\n      configObject = { ...configModule };\n    }\n  } catch (error) {\n    const configFileError = new UsageError(\n      `Cannot read config file \"${resolvedFilePath}\":\\n${error}`,\n    );\n    configFileError.cause = error;\n    throw configFileError;\n  }\n\n  if (filePath.endsWith('package.json')) {\n    log.debug('Looking for webExt key inside package.json file');\n    configObject = configObject.webExt || {};\n  }\n\n  if (Object.keys(configObject).length === 0) {\n    log.debug(\n      `Config file ${resolvedFilePath} did not define any options. ` +\n        'Did you set module.exports = {...}?',\n    );\n  }\n\n  return configObject;\n}\n\nexport async function discoverConfigFiles({ getHomeDir = os.homedir } = {}) {\n  const magicConfigName = 'web-ext-config';\n\n  // Config files will be loaded in this order.\n  const possibleConfigs = [\n    // Look for a magic hidden config (preceded by dot) in home dir.\n    path.join(getHomeDir(), `.${magicConfigName}.mjs`),\n    path.join(getHomeDir(), `.${magicConfigName}.cjs`),\n    path.join(getHomeDir(), `.${magicConfigName}.js`),\n    // Look for webExt key inside package.json file\n    path.join(process.cwd(), 'package.json'),\n    // Look for a magic config in the current working directory.\n    path.join(process.cwd(), `${magicConfigName}.mjs`),\n    path.join(process.cwd(), `${magicConfigName}.cjs`),\n    path.join(process.cwd(), `${magicConfigName}.js`),\n    // Look for a magic hidden config (preceded by dot) the current working directory.\n    path.join(process.cwd(), `.${magicConfigName}.mjs`),\n    path.join(process.cwd(), `.${magicConfigName}.cjs`),\n    path.join(process.cwd(), `.${magicConfigName}.js`),\n  ];\n\n  const configs = await Promise.all(\n    possibleConfigs.map(async (fileName) => {\n      const resolvedFileName = path.resolve(fileName);\n      if (await fileExists(resolvedFileName)) {\n        return resolvedFileName;\n      } else {\n        log.debug(\n          `Discovered config \"${resolvedFileName}\" does not ` +\n            'exist or is not readable',\n        );\n        return undefined;\n      }\n    }),\n  );\n\n  const existingConfigs = [];\n  configs.forEach((f) => {\n    if (typeof f === 'string') {\n      existingConfigs.push(f);\n    }\n  });\n  return existingConfigs;\n}\n"],"mappings":"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","ignoreList":[]}